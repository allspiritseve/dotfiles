#!/bin/bash

if [ ! -f ./Gemfile ]; then
  echo "Couldn't find Gemfile... are you in the right directory?"
  exit 1
fi

case "$1" in
  production) environment=production; shift;;
  staging) environment=staging; shift;;
  *) environment=staging;;
esac

if [ -f ./.beornrc ]; then
  source ./.beornrc
fi

remote=${remote-$environment}
user=${user-'web'}

# Helpers

while getopts t opt; do
  case $opt in
    t) autotag=true;;
  esac
done

confirm_deploy() {
  read -p "${1-'Deploy'} release $tag to $remote? (y/n) " deploy

  if [[ "$deploy" != "y" ]]; then
    echo "No touching!"
    exit 1
  fi
}

# Commands

deploy() {
  # if $autotag; then tag_release; fi

  tag=`git tag -l | tail -n 1`

  confirm_deploy

  echo "Ok, deploying release $tag to $remote!"
  git push $remote $tag
}

redeploy() {
  # if $autotag; then retag fi

  tag=`git tag -l | tail -n 1`

  confirm_deploy "Redeploy"

  echo "Ok, redeploying release $tag to $remote!"
  git push -f $remote $tag
}

tag_release() {
  timestamp=`date +%Y%m%d`
  count=`git tag -l "$timestamp-*" | wc -l`
  tag=$timestamp-`expr $count + 1`

  git tag $tag
  # git push origin master --tags

  echo "Ok, tagged release $tag."
}

retag() {
  git commit --amend --no-edit

  tag=`git tag -l | tail -n 1`

  git tag -d $tag
  git tag $tag
  # git push -f origin $tag

  echo "Ok, retagged release $tag."
}

status() {
  tag=`git tag -l | tail -n 1`

  set -- $(git rev-list --left-right --count $tag...HEAD)
  
  echo "Current tag $tag"
  echo "Your branch is ahead $2 commits and behind $1 commits"
  echo "  (use beorn tag to create another release)"
}

bash() {
  ssh $host
}

run() {
  ssh -t $user@$host run $@
}

case "$1" in
  b|bash) bash;;
  c|console) run rails console;;
  d|deploy) deploy;;
  rake) run $@;;
  tag) tag_release;;
  retag) retag;;
  redeploy) redeploy;;
  r|run) $@;;
  status) status;;
  u|update)
    ssh $host 'sudo apt-get update && sudo apt-get upgrade'
    ;;
  *)
    echo "Usage: beorn (bash|console|deploy|rake|tag|retag|redeploy|run|status|update)" >&2
    exit 1
    ;;
esac
